extends layout

block content
  a(href='https://github.com/you')
      img(style='position: absolute; top: 0; right: 0; border: 0;', src='https://camo.githubusercontent.com/a6677b08c955af8400f44c6298f40e7d19cc5b2d/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f677261795f3664366436642e706e67', alt='Fork me on GitHub', data-canonical-src='https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png')

  .jumbotron
    .container
      h1= "GraphvizREPL "
        small Realtime Text-To-Diagram
      .container
        .row
          .col-md-7
            h2 Make A Room
            p
              form.form-inline(onsubmit='return roomNavigator.goToRoom(this)')
                .form-group
                  .input-group
                    .input-group-addon.tight-on-the-right graphvizrepl.com/
                    input.form-control.tight-on-the-left(type='text', placeholder='my-silly-name' required)
                  button.btn.btn-primary(type="submit") Go
            p
              small You can also go to the room directly from your browser's URL bar.
          .col-md-5
            h2 &nbsp;
            p
              a(class='btn btn-primary' onclick='roomNavigator.goToRandom()') Randomly Named Room
            p
              small Or, we'll generate a random one for you.
  .container
    .row
      h1 Made of Three Things
      .col-md-4
        h2 Etherpad
        p Etherpad, a realtime collaborative text editor (like Google Docs).
        p Etherpad is a realtime collaborative text editor, like Google Docs. Anyone viewing the same Etherpad as you will see theirs updated in realtime for every change you make.
        p Each 'room' on graphviz-repl matches an etherpad document with the same name.
      .col-md-4
        h2 Graphviz
        p Graphviz, a diagram markup language (like markdown).
        p Graphviz is a graph vizualization markup language - sort of like markdown for diagrams
        p Graphviz has 5 different styles of layout. The most popular/common is 'dot' and that's the default. To try the others, toggle the 'Layout' above.
      .col-md-4
        h2 REPL
        p REPL stands for 'Read Evaluate Print Loop' - it's a computery jargony term that sorta means the code runs as you write it (as opposed to being 'compiled' - although graphviz is technically compiled).
        p Our REPL here is javascript in the browser that checks for changes multiple times each second. If there are changes, we ask our server to render the new image for you.
        p Every change you make to the etherpad document (left pane) auto-generates a graphviz diagram (right pane).
    .row
      h1 Tutorials
      p These are also available within a REPL - there is a "Tutorials" button that will copy-paste in each of these examples so you can manipulate them.
    .row
      h3 Simple Diagrams
      .col-md-6
        pre.
          digraph SimplestDiagrams {
            ### Here are 4 "nodes" and 5 "connections":
            A -> B -> C
            C -> D
            B -> A
            B -> D

            manySimpleDiagrams -> canBeExpressed -> usingJustCapitalization
            usingJustCapitalization -> like
            like -> MixedCase
            like -> camelCase

            manySimpleDiagrams ->  "might use" -> "'multiple words' in quotes"
          }

          # comments start with either # or //
          // take your pick :D
          // ### using three #'s might help things line up visually
          // ### everything must be in a digraph{}

      .col-md-6
        img.fit-container(src='images/tutorial_1_simple.png')
    .row
      h3 Attributes
      .col-md-6
        pre.
          digraph AdvancedAttributes {

            ### LABELS
            ### "c" is this node's "node name" or "nickname"
            ### "label" is the text that shows up inside the circle/node/shape
            c [label="the letter c"]
            c -> d

            ### STYLE & COLOR
            d [label="DeeDee"]
            d [style=dotted]
            d [color=orange]

            ### MULTIPLE STYLES
            e [label="The Big E" style=dashed color=purple]
            f [
              label="Effff (f)"
              style=dashed
              color=purple
            ]

            ### STYLING LINES
            g -> h -> i [label="comes before" style="dotted" color="purple"]
          }
      .col-md-6
        img.fit-container(src='images/tutorial_2_attributes.png')
    .row
      h3 Subgraphs
      .col-md-6
        pre.
          digraph FancyOneWithSubgraphs {
            O -> P
            ### to make a subgraph with a box around its contents
            ### you must have "subgraph" and "cluster..." present as in this example
            ### if you forget cluster in your clustername it will never show up
            subgraph clusterSomeClusterName {
            label="title about why these are grouped in here"
            style="dotted"
            P -> Q -> R
            }

            ### graphviz doesn't mind if you do things outside of a subgraph
            R [label = "Rrrrrr"]

            ### If a node is ever used/described/declared inside a subgraph,
            ### it will always appear within that subgraph.
            R -> S

            ### Note: you may want to point to/from a subgraph itself
            ### sorry you can't really :/
            ### you can only point to/from the specific nodes inside of it
          }
      .col-md-6
        img.fit-container(src='images/tutorial_3_subgraphs.png')
